{"version":3,"sources":["lib.js","magnific.js","main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnp0DA;AACA","file":"script.js","sourcesContent":["// open/close nav\r\n\r\n$(document).ready(function () {\r\n  $(\".burger\").click(function (e) {\r\n      $(\".burger__line,.header__nav\").toggleClass('active');\r\n      $(\"body\").toggleClass('lock');\r\n  })\r\n});\r\n\r\n\r\n// scroll-anchors-smooth\r\n\r\nlet anchors = document.querySelectorAll('a[href*=\"#\"]')\r\n\r\nfor (let anchor of anchors) {\r\n  anchor.addEventListener('click', function(event) {\r\n      event.preventDefault()\r\n      let blockID = anchor.getAttribute('href')\r\n      document.querySelector(blockID).scrollIntoView({\r\n          behavior: \"smooth\",\r\n          block: 'start'\r\n      })\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  initialize swiper\r\n\r\nconst swiper = new Swiper('.swiper-container', {\r\n\r\n    loop: true,\r\n\r\n\r\n\r\n    // Navigation arrows\r\n    navigation: {\r\n      nextEl: '.swiper-button-next',\r\n      prevEl: '.swiper-button-prev',\r\n    }\r\n\r\n\r\n  });\r\n\r\n\r\n  // Initializing popup\r\n\r\n  $(document).ready(function() {\r\n    $('.room__gallery').magnificPopup({\r\n      delegate: 'a',\r\n      type: 'image',\r\n      tLoading: 'Loading image #%curr%...',\r\n      mainClass: 'mfp-img-mobile',\r\n      gallery: {\r\n        enabled: true,\r\n        navigateByImgClick: true,\r\n        preload: [0,1] // Will preload 0 - before current, and 1 after the current image\r\n      },\r\n      image: {\r\n        tError: '<a href=\"%url%\">The image #%curr%</a> could not be loaded.',\r\n        titleSrc: function(item) {\r\n          return item.el.attr('title') + '<small>by Marsel Van Oosten</small>';\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/*! Magnific Popup - v1.1.0 - 2016-02-20\r\n* http://dimsemenov.com/plugins/magnific-popup/\r\n* Copyright (c) 2016 Dmitry Semenov; */\r\n; (function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(['jquery'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        // Node/CommonJS\r\n        factory(require('jquery'));\r\n    } else {\r\n        // Browser globals\r\n        factory(window.jQuery || window.Zepto);\r\n    }\r\n}(function ($) {\r\n\r\n    /*>>core*/\r\n    /**\r\n     *\r\n     * Magnific Popup Core JS file\r\n     *\r\n     */\r\n\r\n\r\n    /**\r\n     * Private static constants\r\n     */\r\n    var CLOSE_EVENT = 'Close',\r\n        BEFORE_CLOSE_EVENT = 'BeforeClose',\r\n        AFTER_CLOSE_EVENT = 'AfterClose',\r\n        BEFORE_APPEND_EVENT = 'BeforeAppend',\r\n        MARKUP_PARSE_EVENT = 'MarkupParse',\r\n        OPEN_EVENT = 'Open',\r\n        CHANGE_EVENT = 'Change',\r\n        NS = 'mfp',\r\n        EVENT_NS = '.' + NS,\r\n        READY_CLASS = 'mfp-ready',\r\n        REMOVING_CLASS = 'mfp-removing',\r\n        PREVENT_CLOSE_CLASS = 'mfp-prevent-close';\r\n\r\n\r\n    /**\r\n     * Private vars\r\n     */\r\n    /*jshint -W079 */\r\n    var mfp, // As we have only one instance of MagnificPopup object, we define it locally to not to use 'this'\r\n        MagnificPopup = function () { },\r\n        _isJQ = !!(window.jQuery),\r\n        _prevStatus,\r\n        _window = $(window),\r\n        _document,\r\n        _prevContentType,\r\n        _wrapClasses,\r\n        _currPopupType;\r\n\r\n\r\n    /**\r\n     * Private functions\r\n     */\r\n    var _mfpOn = function (name, f) {\r\n        mfp.ev.on(NS + name + EVENT_NS, f);\r\n    },\r\n        _getEl = function (className, appendTo, html, raw) {\r\n            var el = document.createElement('div');\r\n            el.className = 'mfp-' + className;\r\n            if (html) {\r\n                el.innerHTML = html;\r\n            }\r\n            if (!raw) {\r\n                el = $(el);\r\n                if (appendTo) {\r\n                    el.appendTo(appendTo);\r\n                }\r\n            } else if (appendTo) {\r\n                appendTo.appendChild(el);\r\n            }\r\n            return el;\r\n        },\r\n        _mfpTrigger = function (e, data) {\r\n            mfp.ev.triggerHandler(NS + e, data);\r\n\r\n            if (mfp.st.callbacks) {\r\n                // converts \"mfpEventName\" to \"eventName\" callback and triggers it if it's present\r\n                e = e.charAt(0).toLowerCase() + e.slice(1);\r\n                if (mfp.st.callbacks[e]) {\r\n                    mfp.st.callbacks[e].apply(mfp, $.isArray(data) ? data : [data]);\r\n                }\r\n            }\r\n        },\r\n        _getCloseBtn = function (type) {\r\n            if (type !== _currPopupType || !mfp.currTemplate.closeBtn) {\r\n                mfp.currTemplate.closeBtn = $(mfp.st.closeMarkup.replace('%title%', mfp.st.tClose));\r\n                _currPopupType = type;\r\n            }\r\n            return mfp.currTemplate.closeBtn;\r\n        },\r\n        // Initialize Magnific Popup only when called at least once\r\n        _checkInstance = function () {\r\n            if (!$.magnificPopup.instance) {\r\n                /*jshint -W020 */\r\n                mfp = new MagnificPopup();\r\n                mfp.init();\r\n                $.magnificPopup.instance = mfp;\r\n            }\r\n        },\r\n        // CSS transition detection, http://stackoverflow.com/questions/7264899/detect-css-transitions-using-javascript-and-without-modernizr\r\n        supportsTransitions = function () {\r\n            var s = document.createElement('p').style, // 's' for style. better to create an element if body yet to exist\r\n                v = ['ms', 'O', 'Moz', 'Webkit']; // 'v' for vendor\r\n\r\n            if (s['transition'] !== undefined) {\r\n                return true;\r\n            }\r\n\r\n            while (v.length) {\r\n                if (v.pop() + 'Transition' in s) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n\r\n\r\n    /**\r\n     * Public functions\r\n     */\r\n    MagnificPopup.prototype = {\r\n\r\n        constructor: MagnificPopup,\r\n\r\n        /**\r\n         * Initializes Magnific Popup plugin.\r\n         * This function is triggered only once when $.fn.magnificPopup or $.magnificPopup is executed\r\n         */\r\n        init: function () {\r\n            var appVersion = navigator.appVersion;\r\n            mfp.isLowIE = mfp.isIE8 = document.all && !document.addEventListener;\r\n            mfp.isAndroid = (/android/gi).test(appVersion);\r\n            mfp.isIOS = (/iphone|ipad|ipod/gi).test(appVersion);\r\n            mfp.supportsTransition = supportsTransitions();\r\n\r\n            // We disable fixed positioned lightbox on devices that don't handle it nicely.\r\n            // If you know a better way of detecting this - let me know.\r\n            mfp.probablyMobile = (mfp.isAndroid || mfp.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent));\r\n            _document = $(document);\r\n\r\n            mfp.popupsCache = {};\r\n        },\r\n\r\n        /**\r\n         * Opens popup\r\n         * @param  data [description]\r\n         */\r\n        open: function (data) {\r\n\r\n            var i;\r\n\r\n            if (data.isObj === false) {\r\n                // convert jQuery collection to array to avoid conflicts later\r\n                mfp.items = data.items.toArray();\r\n\r\n                mfp.index = 0;\r\n                var items = data.items,\r\n                    item;\r\n                for (i = 0; i < items.length; i++) {\r\n                    item = items[i];\r\n                    if (item.parsed) {\r\n                        item = item.el[0];\r\n                    }\r\n                    if (item === data.el[0]) {\r\n                        mfp.index = i;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                mfp.items = $.isArray(data.items) ? data.items : [data.items];\r\n                mfp.index = data.index || 0;\r\n            }\r\n\r\n            // if popup is already opened - we just update the content\r\n            if (mfp.isOpen) {\r\n                mfp.updateItemHTML();\r\n                return;\r\n            }\r\n\r\n            mfp.types = [];\r\n            _wrapClasses = '';\r\n            if (data.mainEl && data.mainEl.length) {\r\n                mfp.ev = data.mainEl.eq(0);\r\n            } else {\r\n                mfp.ev = _document;\r\n            }\r\n\r\n            if (data.key) {\r\n                if (!mfp.popupsCache[data.key]) {\r\n                    mfp.popupsCache[data.key] = {};\r\n                }\r\n                mfp.currTemplate = mfp.popupsCache[data.key];\r\n            } else {\r\n                mfp.currTemplate = {};\r\n            }\r\n\r\n\r\n\r\n            mfp.st = $.extend(true, {}, $.magnificPopup.defaults, data);\r\n            mfp.fixedContentPos = mfp.st.fixedContentPos === 'auto' ? !mfp.probablyMobile : mfp.st.fixedContentPos;\r\n\r\n            if (mfp.st.modal) {\r\n                mfp.st.closeOnContentClick = false;\r\n                mfp.st.closeOnBgClick = false;\r\n                mfp.st.showCloseBtn = false;\r\n                mfp.st.enableEscapeKey = false;\r\n            }\r\n\r\n\r\n            // Building markup\r\n            // main containers are created only once\r\n            if (!mfp.bgOverlay) {\r\n\r\n                // Dark overlay\r\n                mfp.bgOverlay = _getEl('bg').on('click' + EVENT_NS, function () {\r\n                    mfp.close();\r\n                });\r\n\r\n                mfp.wrap = _getEl('wrap').attr('tabindex', -1).on('click' + EVENT_NS, function (e) {\r\n                    if (mfp._checkIfClose(e.target)) {\r\n                        mfp.close();\r\n                    }\r\n                });\r\n\r\n                mfp.container = _getEl('container', mfp.wrap);\r\n            }\r\n\r\n            mfp.contentContainer = _getEl('content');\r\n            if (mfp.st.preloader) {\r\n                mfp.preloader = _getEl('preloader', mfp.container, mfp.st.tLoading);\r\n            }\r\n\r\n\r\n            // Initializing modules\r\n            var modules = $.magnificPopup.modules;\r\n            for (i = 0; i < modules.length; i++) {\r\n                var n = modules[i];\r\n                n = n.charAt(0).toUpperCase() + n.slice(1);\r\n                mfp['init' + n].call(mfp);\r\n            }\r\n            _mfpTrigger('BeforeOpen');\r\n\r\n\r\n            if (mfp.st.showCloseBtn) {\r\n                // Close button\r\n                if (!mfp.st.closeBtnInside) {\r\n                    mfp.wrap.append(_getCloseBtn());\r\n                } else {\r\n                    _mfpOn(MARKUP_PARSE_EVENT, function (e, template, values, item) {\r\n                        values.close_replaceWith = _getCloseBtn(item.type);\r\n                    });\r\n                    _wrapClasses += ' mfp-close-btn-in';\r\n                }\r\n            }\r\n\r\n            if (mfp.st.alignTop) {\r\n                _wrapClasses += ' mfp-align-top';\r\n            }\r\n\r\n\r\n\r\n            if (mfp.fixedContentPos) {\r\n                mfp.wrap.css({\r\n                    overflow: mfp.st.overflowY,\r\n                    overflowX: 'hidden',\r\n                    overflowY: mfp.st.overflowY\r\n                });\r\n            } else {\r\n                mfp.wrap.css({\r\n                    top: _window.scrollTop(),\r\n                    position: 'absolute'\r\n                });\r\n            }\r\n            if (mfp.st.fixedBgPos === false || (mfp.st.fixedBgPos === 'auto' && !mfp.fixedContentPos)) {\r\n                mfp.bgOverlay.css({\r\n                    height: _document.height(),\r\n                    position: 'absolute'\r\n                });\r\n            }\r\n\r\n\r\n\r\n            if (mfp.st.enableEscapeKey) {\r\n                // Close on ESC key\r\n                _document.on('keyup' + EVENT_NS, function (e) {\r\n                    if (e.keyCode === 27) {\r\n                        mfp.close();\r\n                    }\r\n                });\r\n            }\r\n\r\n            _window.on('resize' + EVENT_NS, function () {\r\n                mfp.updateSize();\r\n            });\r\n\r\n\r\n            if (!mfp.st.closeOnContentClick) {\r\n                _wrapClasses += ' mfp-auto-cursor';\r\n            }\r\n\r\n            if (_wrapClasses)\r\n                mfp.wrap.addClass(_wrapClasses);\r\n\r\n\r\n            // this triggers recalculation of layout, so we get it once to not to trigger twice\r\n            var windowHeight = mfp.wH = _window.height();\r\n\r\n\r\n            var windowStyles = {};\r\n\r\n            if (mfp.fixedContentPos) {\r\n                if (mfp._hasScrollBar(windowHeight)) {\r\n                    var s = mfp._getScrollbarSize();\r\n                    if (s) {\r\n                        windowStyles.marginRight = s;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (mfp.fixedContentPos) {\r\n                if (!mfp.isIE7) {\r\n                    windowStyles.overflow = 'hidden';\r\n                } else {\r\n                    // ie7 double-scroll bug\r\n                    $('body, html').css('overflow', 'hidden');\r\n                }\r\n            }\r\n\r\n\r\n\r\n            var classesToadd = mfp.st.mainClass;\r\n            if (mfp.isIE7) {\r\n                classesToadd += ' mfp-ie7';\r\n            }\r\n            if (classesToadd) {\r\n                mfp._addClassToMFP(classesToadd);\r\n            }\r\n\r\n            // add content\r\n            mfp.updateItemHTML();\r\n\r\n            _mfpTrigger('BuildControls');\r\n\r\n            // remove scrollbar, add margin e.t.c\r\n            $('html').css(windowStyles);\r\n\r\n            // add everything to DOM\r\n            mfp.bgOverlay.add(mfp.wrap).prependTo(mfp.st.prependTo || $(document.body));\r\n\r\n            // Save last focused element\r\n            mfp._lastFocusedEl = document.activeElement;\r\n\r\n            // Wait for next cycle to allow CSS transition\r\n            setTimeout(function () {\r\n\r\n                if (mfp.content) {\r\n                    mfp._addClassToMFP(READY_CLASS);\r\n                    mfp._setFocus();\r\n                } else {\r\n                    // if content is not defined (not loaded e.t.c) we add class only for BG\r\n                    mfp.bgOverlay.addClass(READY_CLASS);\r\n                }\r\n\r\n                // Trap the focus in popup\r\n                _document.on('focusin' + EVENT_NS, mfp._onFocusIn);\r\n\r\n            }, 16);\r\n\r\n            mfp.isOpen = true;\r\n            mfp.updateSize(windowHeight);\r\n            _mfpTrigger(OPEN_EVENT);\r\n\r\n            return data;\r\n        },\r\n\r\n        /**\r\n         * Closes the popup\r\n         */\r\n        close: function () {\r\n            if (!mfp.isOpen) return;\r\n            _mfpTrigger(BEFORE_CLOSE_EVENT);\r\n\r\n            mfp.isOpen = false;\r\n            // for CSS3 animation\r\n            if (mfp.st.removalDelay && !mfp.isLowIE && mfp.supportsTransition) {\r\n                mfp._addClassToMFP(REMOVING_CLASS);\r\n                setTimeout(function () {\r\n                    mfp._close();\r\n                }, mfp.st.removalDelay);\r\n            } else {\r\n                mfp._close();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Helper for close() function\r\n         */\r\n        _close: function () {\r\n            _mfpTrigger(CLOSE_EVENT);\r\n\r\n            var classesToRemove = REMOVING_CLASS + ' ' + READY_CLASS + ' ';\r\n\r\n            mfp.bgOverlay.detach();\r\n            mfp.wrap.detach();\r\n            mfp.container.empty();\r\n\r\n            if (mfp.st.mainClass) {\r\n                classesToRemove += mfp.st.mainClass + ' ';\r\n            }\r\n\r\n            mfp._removeClassFromMFP(classesToRemove);\r\n\r\n            if (mfp.fixedContentPos) {\r\n                var windowStyles = { marginRight: '' };\r\n                if (mfp.isIE7) {\r\n                    $('body, html').css('overflow', '');\r\n                } else {\r\n                    windowStyles.overflow = '';\r\n                }\r\n                $('html').css(windowStyles);\r\n            }\r\n\r\n            _document.off('keyup' + EVENT_NS + ' focusin' + EVENT_NS);\r\n            mfp.ev.off(EVENT_NS);\r\n\r\n            // clean up DOM elements that aren't removed\r\n            mfp.wrap.attr('class', 'mfp-wrap').removeAttr('style');\r\n            mfp.bgOverlay.attr('class', 'mfp-bg');\r\n            mfp.container.attr('class', 'mfp-container');\r\n\r\n            // remove close button from target element\r\n            if (mfp.st.showCloseBtn &&\r\n                (!mfp.st.closeBtnInside || mfp.currTemplate[mfp.currItem.type] === true)) {\r\n                if (mfp.currTemplate.closeBtn)\r\n                    mfp.currTemplate.closeBtn.detach();\r\n            }\r\n\r\n\r\n            if (mfp.st.autoFocusLast && mfp._lastFocusedEl) {\r\n                $(mfp._lastFocusedEl).focus(); // put tab focus back\r\n            }\r\n            mfp.currItem = null;\r\n            mfp.content = null;\r\n            mfp.currTemplate = null;\r\n            mfp.prevHeight = 0;\r\n\r\n            _mfpTrigger(AFTER_CLOSE_EVENT);\r\n        },\r\n\r\n        updateSize: function (winHeight) {\r\n\r\n            if (mfp.isIOS) {\r\n                // fixes iOS nav bars https://github.com/dimsemenov/Magnific-Popup/issues/2\r\n                var zoomLevel = document.documentElement.clientWidth / window.innerWidth;\r\n                var height = window.innerHeight * zoomLevel;\r\n                mfp.wrap.css('height', height);\r\n                mfp.wH = height;\r\n            } else {\r\n                mfp.wH = winHeight || _window.height();\r\n            }\r\n            // Fixes #84: popup incorrectly positioned with position:relative on body\r\n            if (!mfp.fixedContentPos) {\r\n                mfp.wrap.css('height', mfp.wH);\r\n            }\r\n\r\n            _mfpTrigger('Resize');\r\n\r\n        },\r\n\r\n        /**\r\n         * Set content of popup based on current index\r\n         */\r\n        updateItemHTML: function () {\r\n            var item = mfp.items[mfp.index];\r\n\r\n            // Detach and perform modifications\r\n            mfp.contentContainer.detach();\r\n\r\n            if (mfp.content)\r\n                mfp.content.detach();\r\n\r\n            if (!item.parsed) {\r\n                item = mfp.parseEl(mfp.index);\r\n            }\r\n\r\n            var type = item.type;\r\n\r\n            _mfpTrigger('BeforeChange', [mfp.currItem ? mfp.currItem.type : '', type]);\r\n            // BeforeChange event works like so:\r\n            // _mfpOn('BeforeChange', function(e, prevType, newType) { });\r\n\r\n            mfp.currItem = item;\r\n\r\n            if (!mfp.currTemplate[type]) {\r\n                var markup = mfp.st[type] ? mfp.st[type].markup : false;\r\n\r\n                // allows to modify markup\r\n                _mfpTrigger('FirstMarkupParse', markup);\r\n\r\n                if (markup) {\r\n                    mfp.currTemplate[type] = $(markup);\r\n                } else {\r\n                    // if there is no markup found we just define that template is parsed\r\n                    mfp.currTemplate[type] = true;\r\n                }\r\n            }\r\n\r\n            if (_prevContentType && _prevContentType !== item.type) {\r\n                mfp.container.removeClass('mfp-' + _prevContentType + '-holder');\r\n            }\r\n\r\n            var newContent = mfp['get' + type.charAt(0).toUpperCase() + type.slice(1)](item, mfp.currTemplate[type]);\r\n            mfp.appendContent(newContent, type);\r\n\r\n            item.preloaded = true;\r\n\r\n            _mfpTrigger(CHANGE_EVENT, item);\r\n            _prevContentType = item.type;\r\n\r\n            // Append container back after its content changed\r\n            mfp.container.prepend(mfp.contentContainer);\r\n\r\n            _mfpTrigger('AfterChange');\r\n        },\r\n\r\n\r\n        /**\r\n         * Set HTML content of popup\r\n         */\r\n        appendContent: function (newContent, type) {\r\n            mfp.content = newContent;\r\n\r\n            if (newContent) {\r\n                if (mfp.st.showCloseBtn && mfp.st.closeBtnInside &&\r\n                    mfp.currTemplate[type] === true) {\r\n                    // if there is no markup, we just append close button element inside\r\n                    if (!mfp.content.find('.mfp-close').length) {\r\n                        mfp.content.append(_getCloseBtn());\r\n                    }\r\n                } else {\r\n                    mfp.content = newContent;\r\n                }\r\n            } else {\r\n                mfp.content = '';\r\n            }\r\n\r\n            _mfpTrigger(BEFORE_APPEND_EVENT);\r\n            mfp.container.addClass('mfp-' + type + '-holder');\r\n\r\n            mfp.contentContainer.append(mfp.content);\r\n        },\r\n\r\n\r\n        /**\r\n         * Creates Magnific Popup data object based on given data\r\n         * @param  {int} index Index of item to parse\r\n         */\r\n        parseEl: function (index) {\r\n            var item = mfp.items[index],\r\n                type;\r\n\r\n            if (item.tagName) {\r\n                item = { el: $(item) };\r\n            } else {\r\n                type = item.type;\r\n                item = { data: item, src: item.src };\r\n            }\r\n\r\n            if (item.el) {\r\n                var types = mfp.types;\r\n\r\n                // check for 'mfp-TYPE' class\r\n                for (var i = 0; i < types.length; i++) {\r\n                    if (item.el.hasClass('mfp-' + types[i])) {\r\n                        type = types[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                item.src = item.el.attr('data-mfp-src');\r\n                if (!item.src) {\r\n                    item.src = item.el.attr('href');\r\n                }\r\n            }\r\n\r\n            item.type = type || mfp.st.type || 'inline';\r\n            item.index = index;\r\n            item.parsed = true;\r\n            mfp.items[index] = item;\r\n            _mfpTrigger('ElementParse', item);\r\n\r\n            return mfp.items[index];\r\n        },\r\n\r\n\r\n        /**\r\n         * Initializes single popup or a group of popups\r\n         */\r\n        addGroup: function (el, options) {\r\n            var eHandler = function (e) {\r\n                e.mfpEl = this;\r\n                mfp._openClick(e, el, options);\r\n            };\r\n\r\n            if (!options) {\r\n                options = {};\r\n            }\r\n\r\n            var eName = 'click.magnificPopup';\r\n            options.mainEl = el;\r\n\r\n            if (options.items) {\r\n                options.isObj = true;\r\n                el.off(eName).on(eName, eHandler);\r\n            } else {\r\n                options.isObj = false;\r\n                if (options.delegate) {\r\n                    el.off(eName).on(eName, options.delegate, eHandler);\r\n                } else {\r\n                    options.items = el;\r\n                    el.off(eName).on(eName, eHandler);\r\n                }\r\n            }\r\n        },\r\n        _openClick: function (e, el, options) {\r\n            var midClick = options.midClick !== undefined ? options.midClick : $.magnificPopup.defaults.midClick;\r\n\r\n\r\n            if (!midClick && (e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey)) {\r\n                return;\r\n            }\r\n\r\n            var disableOn = options.disableOn !== undefined ? options.disableOn : $.magnificPopup.defaults.disableOn;\r\n\r\n            if (disableOn) {\r\n                if ($.isFunction(disableOn)) {\r\n                    if (!disableOn.call(mfp)) {\r\n                        return true;\r\n                    }\r\n                } else { // else it's number\r\n                    if (_window.width() < disableOn) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (e.type) {\r\n                e.preventDefault();\r\n\r\n                // This will prevent popup from closing if element is inside and popup is already opened\r\n                if (mfp.isOpen) {\r\n                    e.stopPropagation();\r\n                }\r\n            }\r\n\r\n            options.el = $(e.mfpEl);\r\n            if (options.delegate) {\r\n                options.items = el.find(options.delegate);\r\n            }\r\n            mfp.open(options);\r\n        },\r\n\r\n\r\n        /**\r\n         * Updates text on preloader\r\n         */\r\n        updateStatus: function (status, text) {\r\n\r\n            if (mfp.preloader) {\r\n                if (_prevStatus !== status) {\r\n                    mfp.container.removeClass('mfp-s-' + _prevStatus);\r\n                }\r\n\r\n                if (!text && status === 'loading') {\r\n                    text = mfp.st.tLoading;\r\n                }\r\n\r\n                var data = {\r\n                    status: status,\r\n                    text: text\r\n                };\r\n                // allows to modify status\r\n                _mfpTrigger('UpdateStatus', data);\r\n\r\n                status = data.status;\r\n                text = data.text;\r\n\r\n                mfp.preloader.html(text);\r\n\r\n                mfp.preloader.find('a').on('click', function (e) {\r\n                    e.stopImmediatePropagation();\r\n                });\r\n\r\n                mfp.container.addClass('mfp-s-' + status);\r\n                _prevStatus = status;\r\n            }\r\n        },\r\n\r\n\r\n        /*\r\n            \"Private\" helpers that aren't private at all\r\n         */\r\n        // Check to close popup or not\r\n        // \"target\" is an element that was clicked\r\n        _checkIfClose: function (target) {\r\n\r\n            if ($(target).hasClass(PREVENT_CLOSE_CLASS)) {\r\n                return;\r\n            }\r\n\r\n            var closeOnContent = mfp.st.closeOnContentClick;\r\n            var closeOnBg = mfp.st.closeOnBgClick;\r\n\r\n            if (closeOnContent && closeOnBg) {\r\n                return true;\r\n            } else {\r\n\r\n                // We close the popup if click is on close button or on preloader. Or if there is no content.\r\n                if (!mfp.content || $(target).hasClass('mfp-close') || (mfp.preloader && target === mfp.preloader[0])) {\r\n                    return true;\r\n                }\r\n\r\n                // if click is outside the content\r\n                if ((target !== mfp.content[0] && !$.contains(mfp.content[0], target))) {\r\n                    if (closeOnBg) {\r\n                        // last check, if the clicked element is in DOM, (in case it's removed onclick)\r\n                        if ($.contains(document, target)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                } else if (closeOnContent) {\r\n                    return true;\r\n                }\r\n\r\n            }\r\n            return false;\r\n        },\r\n        _addClassToMFP: function (cName) {\r\n            mfp.bgOverlay.addClass(cName);\r\n            mfp.wrap.addClass(cName);\r\n        },\r\n        _removeClassFromMFP: function (cName) {\r\n            this.bgOverlay.removeClass(cName);\r\n            mfp.wrap.removeClass(cName);\r\n        },\r\n        _hasScrollBar: function (winHeight) {\r\n            return ((mfp.isIE7 ? _document.height() : document.body.scrollHeight) > (winHeight || _window.height()));\r\n        },\r\n        _setFocus: function () {\r\n            (mfp.st.focus ? mfp.content.find(mfp.st.focus).eq(0) : mfp.wrap).focus();\r\n        },\r\n        _onFocusIn: function (e) {\r\n            if (e.target !== mfp.wrap[0] && !$.contains(mfp.wrap[0], e.target)) {\r\n                mfp._setFocus();\r\n                return false;\r\n            }\r\n        },\r\n        _parseMarkup: function (template, values, item) {\r\n            var arr;\r\n            if (item.data) {\r\n                values = $.extend(item.data, values);\r\n            }\r\n            _mfpTrigger(MARKUP_PARSE_EVENT, [template, values, item]);\r\n\r\n            $.each(values, function (key, value) {\r\n                if (value === undefined || value === false) {\r\n                    return true;\r\n                }\r\n                arr = key.split('_');\r\n                if (arr.length > 1) {\r\n                    var el = template.find(EVENT_NS + '-' + arr[0]);\r\n\r\n                    if (el.length > 0) {\r\n                        var attr = arr[1];\r\n                        if (attr === 'replaceWith') {\r\n                            if (el[0] !== value[0]) {\r\n                                el.replaceWith(value);\r\n                            }\r\n                        } else if (attr === 'img') {\r\n                            if (el.is('img')) {\r\n                                el.attr('src', value);\r\n                            } else {\r\n                                el.replaceWith($('<img>').attr('src', value).attr('class', el.attr('class')));\r\n                            }\r\n                        } else {\r\n                            el.attr(arr[1], value);\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    template.find(EVENT_NS + '-' + key).html(value);\r\n                }\r\n            });\r\n        },\r\n\r\n        _getScrollbarSize: function () {\r\n            // thx David\r\n            if (mfp.scrollbarSize === undefined) {\r\n                var scrollDiv = document.createElement(\"div\");\r\n                scrollDiv.style.cssText = 'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';\r\n                document.body.appendChild(scrollDiv);\r\n                mfp.scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n                document.body.removeChild(scrollDiv);\r\n            }\r\n            return mfp.scrollbarSize;\r\n        }\r\n\r\n    }; /* MagnificPopup core prototype end */\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Public static functions\r\n     */\r\n    $.magnificPopup = {\r\n        instance: null,\r\n        proto: MagnificPopup.prototype,\r\n        modules: [],\r\n\r\n        open: function (options, index) {\r\n            _checkInstance();\r\n\r\n            if (!options) {\r\n                options = {};\r\n            } else {\r\n                options = $.extend(true, {}, options);\r\n            }\r\n\r\n            options.isObj = true;\r\n            options.index = index || 0;\r\n            return this.instance.open(options);\r\n        },\r\n\r\n        close: function () {\r\n            return $.magnificPopup.instance && $.magnificPopup.instance.close();\r\n        },\r\n\r\n        registerModule: function (name, module) {\r\n            if (module.options) {\r\n                $.magnificPopup.defaults[name] = module.options;\r\n            }\r\n            $.extend(this.proto, module.proto);\r\n            this.modules.push(name);\r\n        },\r\n\r\n        defaults: {\r\n\r\n            // Info about options is in docs:\r\n            // http://dimsemenov.com/plugins/magnific-popup/documentation.html#options\r\n\r\n            disableOn: 0,\r\n\r\n            key: null,\r\n\r\n            midClick: false,\r\n\r\n            mainClass: '',\r\n\r\n            preloader: true,\r\n\r\n            focus: '', // CSS selector of input to focus after popup is opened\r\n\r\n            closeOnContentClick: false,\r\n\r\n            closeOnBgClick: true,\r\n\r\n            closeBtnInside: true,\r\n\r\n            showCloseBtn: true,\r\n\r\n            enableEscapeKey: true,\r\n\r\n            modal: false,\r\n\r\n            alignTop: false,\r\n\r\n            removalDelay: 0,\r\n\r\n            prependTo: null,\r\n\r\n            fixedContentPos: 'auto',\r\n\r\n            fixedBgPos: 'auto',\r\n\r\n            overflowY: 'auto',\r\n\r\n            closeMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-close\">&#215;</button>',\r\n\r\n            tClose: 'Close (Esc)',\r\n\r\n            tLoading: 'Loading...',\r\n\r\n            autoFocusLast: true\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n    $.fn.magnificPopup = function (options) {\r\n        _checkInstance();\r\n\r\n        var jqEl = $(this);\r\n\r\n        // We call some API method of first param is a string\r\n        if (typeof options === \"string\") {\r\n\r\n            if (options === 'open') {\r\n                var items,\r\n                    itemOpts = _isJQ ? jqEl.data('magnificPopup') : jqEl[0].magnificPopup,\r\n                    index = parseInt(arguments[1], 10) || 0;\r\n\r\n                if (itemOpts.items) {\r\n                    items = itemOpts.items[index];\r\n                } else {\r\n                    items = jqEl;\r\n                    if (itemOpts.delegate) {\r\n                        items = items.find(itemOpts.delegate);\r\n                    }\r\n                    items = items.eq(index);\r\n                }\r\n                mfp._openClick({ mfpEl: items }, jqEl, itemOpts);\r\n            } else {\r\n                if (mfp.isOpen)\r\n                    mfp[options].apply(mfp, Array.prototype.slice.call(arguments, 1));\r\n            }\r\n\r\n        } else {\r\n            // clone options obj\r\n            options = $.extend(true, {}, options);\r\n\r\n            /*\r\n             * As Zepto doesn't support .data() method for objects\r\n             * and it works only in normal browsers\r\n             * we assign \"options\" object directly to the DOM element. FTW!\r\n             */\r\n            if (_isJQ) {\r\n                jqEl.data('magnificPopup', options);\r\n            } else {\r\n                jqEl[0].magnificPopup = options;\r\n            }\r\n\r\n            mfp.addGroup(jqEl, options);\r\n\r\n        }\r\n        return jqEl;\r\n    };\r\n\r\n    /*>>core*/\r\n\r\n    /*>>inline*/\r\n\r\n    var INLINE_NS = 'inline',\r\n        _hiddenClass,\r\n        _inlinePlaceholder,\r\n        _lastInlineElement,\r\n        _putInlineElementsBack = function () {\r\n            if (_lastInlineElement) {\r\n                _inlinePlaceholder.after(_lastInlineElement.addClass(_hiddenClass)).detach();\r\n                _lastInlineElement = null;\r\n            }\r\n        };\r\n\r\n    $.magnificPopup.registerModule(INLINE_NS, {\r\n        options: {\r\n            hiddenClass: 'hide', // will be appended with `mfp-` prefix\r\n            markup: '',\r\n            tNotFound: 'Content not found'\r\n        },\r\n        proto: {\r\n\r\n            initInline: function () {\r\n                mfp.types.push(INLINE_NS);\r\n\r\n                _mfpOn(CLOSE_EVENT + '.' + INLINE_NS, function () {\r\n                    _putInlineElementsBack();\r\n                });\r\n            },\r\n\r\n            getInline: function (item, template) {\r\n\r\n                _putInlineElementsBack();\r\n\r\n                if (item.src) {\r\n                    var inlineSt = mfp.st.inline,\r\n                        el = $(item.src);\r\n\r\n                    if (el.length) {\r\n\r\n                        // If target element has parent - we replace it with placeholder and put it back after popup is closed\r\n                        var parent = el[0].parentNode;\r\n                        if (parent && parent.tagName) {\r\n                            if (!_inlinePlaceholder) {\r\n                                _hiddenClass = inlineSt.hiddenClass;\r\n                                _inlinePlaceholder = _getEl(_hiddenClass);\r\n                                _hiddenClass = 'mfp-' + _hiddenClass;\r\n                            }\r\n                            // replace target inline element with placeholder\r\n                            _lastInlineElement = el.after(_inlinePlaceholder).detach().removeClass(_hiddenClass);\r\n                        }\r\n\r\n                        mfp.updateStatus('ready');\r\n                    } else {\r\n                        mfp.updateStatus('error', inlineSt.tNotFound);\r\n                        el = $('<div>');\r\n                    }\r\n\r\n                    item.inlineElement = el;\r\n                    return el;\r\n                }\r\n\r\n                mfp.updateStatus('ready');\r\n                mfp._parseMarkup(template, {}, item);\r\n                return template;\r\n            }\r\n        }\r\n    });\r\n\r\n    /*>>inline*/\r\n\r\n    /*>>ajax*/\r\n    var AJAX_NS = 'ajax',\r\n        _ajaxCur,\r\n        _removeAjaxCursor = function () {\r\n            if (_ajaxCur) {\r\n                $(document.body).removeClass(_ajaxCur);\r\n            }\r\n        },\r\n        _destroyAjaxRequest = function () {\r\n            _removeAjaxCursor();\r\n            if (mfp.req) {\r\n                mfp.req.abort();\r\n            }\r\n        };\r\n\r\n    $.magnificPopup.registerModule(AJAX_NS, {\r\n\r\n        options: {\r\n            settings: null,\r\n            cursor: 'mfp-ajax-cur',\r\n            tError: '<a href=\"%url%\">The content</a> could not be loaded.'\r\n        },\r\n\r\n        proto: {\r\n            initAjax: function () {\r\n                mfp.types.push(AJAX_NS);\r\n                _ajaxCur = mfp.st.ajax.cursor;\r\n\r\n                _mfpOn(CLOSE_EVENT + '.' + AJAX_NS, _destroyAjaxRequest);\r\n                _mfpOn('BeforeChange.' + AJAX_NS, _destroyAjaxRequest);\r\n            },\r\n            getAjax: function (item) {\r\n\r\n                if (_ajaxCur) {\r\n                    $(document.body).addClass(_ajaxCur);\r\n                }\r\n\r\n                mfp.updateStatus('loading');\r\n\r\n                var opts = $.extend({\r\n                    url: item.src,\r\n                    success: function (data, textStatus, jqXHR) {\r\n                        var temp = {\r\n                            data: data,\r\n                            xhr: jqXHR\r\n                        };\r\n\r\n                        _mfpTrigger('ParseAjax', temp);\r\n\r\n                        mfp.appendContent($(temp.data), AJAX_NS);\r\n\r\n                        item.finished = true;\r\n\r\n                        _removeAjaxCursor();\r\n\r\n                        mfp._setFocus();\r\n\r\n                        setTimeout(function () {\r\n                            mfp.wrap.addClass(READY_CLASS);\r\n                        }, 16);\r\n\r\n                        mfp.updateStatus('ready');\r\n\r\n                        _mfpTrigger('AjaxContentAdded');\r\n                    },\r\n                    error: function () {\r\n                        _removeAjaxCursor();\r\n                        item.finished = item.loadError = true;\r\n                        mfp.updateStatus('error', mfp.st.ajax.tError.replace('%url%', item.src));\r\n                    }\r\n                }, mfp.st.ajax.settings);\r\n\r\n                mfp.req = $.ajax(opts);\r\n\r\n                return '';\r\n            }\r\n        }\r\n    });\r\n\r\n    /*>>ajax*/\r\n\r\n    /*>>image*/\r\n    var _imgInterval,\r\n        _getTitle = function (item) {\r\n            if (item.data && item.data.title !== undefined)\r\n                return item.data.title;\r\n\r\n            var src = mfp.st.image.titleSrc;\r\n\r\n            if (src) {\r\n                if ($.isFunction(src)) {\r\n                    return src.call(mfp, item);\r\n                } else if (item.el) {\r\n                    return item.el.attr(src) || '';\r\n                }\r\n            }\r\n            return '';\r\n        };\r\n\r\n    $.magnificPopup.registerModule('image', {\r\n\r\n        options: {\r\n            markup: '<div class=\"mfp-figure\">' +\r\n                '<div class=\"mfp-close\"></div>' +\r\n                '<figure>' +\r\n                '<div class=\"mfp-img\"></div>' +\r\n                '<figcaption>' +\r\n                '<div class=\"mfp-bottom-bar\">' +\r\n                '<div class=\"mfp-title\"></div>' +\r\n                '<div class=\"mfp-counter\"></div>' +\r\n                '</div>' +\r\n                '</figcaption>' +\r\n                '</figure>' +\r\n                '</div>',\r\n            cursor: 'mfp-zoom-out-cur',\r\n            titleSrc: 'title',\r\n            verticalFit: true,\r\n            tError: '<a href=\"%url%\">The image</a> could not be loaded.'\r\n        },\r\n\r\n        proto: {\r\n            initImage: function () {\r\n                var imgSt = mfp.st.image,\r\n                    ns = '.image';\r\n\r\n                mfp.types.push('image');\r\n\r\n                _mfpOn(OPEN_EVENT + ns, function () {\r\n                    if (mfp.currItem.type === 'image' && imgSt.cursor) {\r\n                        $(document.body).addClass(imgSt.cursor);\r\n                    }\r\n                });\r\n\r\n                _mfpOn(CLOSE_EVENT + ns, function () {\r\n                    if (imgSt.cursor) {\r\n                        $(document.body).removeClass(imgSt.cursor);\r\n                    }\r\n                    _window.off('resize' + EVENT_NS);\r\n                });\r\n\r\n                _mfpOn('Resize' + ns, mfp.resizeImage);\r\n                if (mfp.isLowIE) {\r\n                    _mfpOn('AfterChange', mfp.resizeImage);\r\n                }\r\n            },\r\n            resizeImage: function () {\r\n                var item = mfp.currItem;\r\n                if (!item || !item.img) return;\r\n\r\n                if (mfp.st.image.verticalFit) {\r\n                    var decr = 0;\r\n                    // fix box-sizing in ie7/8\r\n                    if (mfp.isLowIE) {\r\n                        decr = parseInt(item.img.css('padding-top'), 10) + parseInt(item.img.css('padding-bottom'), 10);\r\n                    }\r\n                    item.img.css('max-height', mfp.wH - decr);\r\n                }\r\n            },\r\n            _onImageHasSize: function (item) {\r\n                if (item.img) {\r\n\r\n                    item.hasSize = true;\r\n\r\n                    if (_imgInterval) {\r\n                        clearInterval(_imgInterval);\r\n                    }\r\n\r\n                    item.isCheckingImgSize = false;\r\n\r\n                    _mfpTrigger('ImageHasSize', item);\r\n\r\n                    if (item.imgHidden) {\r\n                        if (mfp.content)\r\n                            mfp.content.removeClass('mfp-loading');\r\n\r\n                        item.imgHidden = false;\r\n                    }\r\n\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Function that loops until the image has size to display elements that rely on it asap\r\n             */\r\n            findImageSize: function (item) {\r\n\r\n                var counter = 0,\r\n                    img = item.img[0],\r\n                    mfpSetInterval = function (delay) {\r\n\r\n                        if (_imgInterval) {\r\n                            clearInterval(_imgInterval);\r\n                        }\r\n                        // decelerating interval that checks for size of an image\r\n                        _imgInterval = setInterval(function () {\r\n                            if (img.naturalWidth > 0) {\r\n                                mfp._onImageHasSize(item);\r\n                                return;\r\n                            }\r\n\r\n                            if (counter > 200) {\r\n                                clearInterval(_imgInterval);\r\n                            }\r\n\r\n                            counter++;\r\n                            if (counter === 3) {\r\n                                mfpSetInterval(10);\r\n                            } else if (counter === 40) {\r\n                                mfpSetInterval(50);\r\n                            } else if (counter === 100) {\r\n                                mfpSetInterval(500);\r\n                            }\r\n                        }, delay);\r\n                    };\r\n\r\n                mfpSetInterval(1);\r\n            },\r\n\r\n            getImage: function (item, template) {\r\n\r\n                var guard = 0,\r\n\r\n                    // image load complete handler\r\n                    onLoadComplete = function () {\r\n                        if (item) {\r\n                            if (item.img[0].complete) {\r\n                                item.img.off('.mfploader');\r\n\r\n                                if (item === mfp.currItem) {\r\n                                    mfp._onImageHasSize(item);\r\n\r\n                                    mfp.updateStatus('ready');\r\n                                }\r\n\r\n                                item.hasSize = true;\r\n                                item.loaded = true;\r\n\r\n                                _mfpTrigger('ImageLoadComplete');\r\n\r\n                            }\r\n                            else {\r\n                                // if image complete check fails 200 times (20 sec), we assume that there was an error.\r\n                                guard++;\r\n                                if (guard < 200) {\r\n                                    setTimeout(onLoadComplete, 100);\r\n                                } else {\r\n                                    onLoadError();\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    // image error handler\r\n                    onLoadError = function () {\r\n                        if (item) {\r\n                            item.img.off('.mfploader');\r\n                            if (item === mfp.currItem) {\r\n                                mfp._onImageHasSize(item);\r\n                                mfp.updateStatus('error', imgSt.tError.replace('%url%', item.src));\r\n                            }\r\n\r\n                            item.hasSize = true;\r\n                            item.loaded = true;\r\n                            item.loadError = true;\r\n                        }\r\n                    },\r\n                    imgSt = mfp.st.image;\r\n\r\n\r\n                var el = template.find('.mfp-img');\r\n                if (el.length) {\r\n                    var img = document.createElement('img');\r\n                    img.className = 'mfp-img';\r\n                    if (item.el && item.el.find('img').length) {\r\n                        img.alt = item.el.find('img').attr('alt');\r\n                    }\r\n                    item.img = $(img).on('load.mfploader', onLoadComplete).on('error.mfploader', onLoadError);\r\n                    img.src = item.src;\r\n\r\n                    // without clone() \"error\" event is not firing when IMG is replaced by new IMG\r\n                    // TODO: find a way to avoid such cloning\r\n                    if (el.is('img')) {\r\n                        item.img = item.img.clone();\r\n                    }\r\n\r\n                    img = item.img[0];\r\n                    if (img.naturalWidth > 0) {\r\n                        item.hasSize = true;\r\n                    } else if (!img.width) {\r\n                        item.hasSize = false;\r\n                    }\r\n                }\r\n\r\n                mfp._parseMarkup(template, {\r\n                    title: _getTitle(item),\r\n                    img_replaceWith: item.img\r\n                }, item);\r\n\r\n                mfp.resizeImage();\r\n\r\n                if (item.hasSize) {\r\n                    if (_imgInterval) clearInterval(_imgInterval);\r\n\r\n                    if (item.loadError) {\r\n                        template.addClass('mfp-loading');\r\n                        mfp.updateStatus('error', imgSt.tError.replace('%url%', item.src));\r\n                    } else {\r\n                        template.removeClass('mfp-loading');\r\n                        mfp.updateStatus('ready');\r\n                    }\r\n                    return template;\r\n                }\r\n\r\n                mfp.updateStatus('loading');\r\n                item.loading = true;\r\n\r\n                if (!item.hasSize) {\r\n                    item.imgHidden = true;\r\n                    template.addClass('mfp-loading');\r\n                    mfp.findImageSize(item);\r\n                }\r\n\r\n                return template;\r\n            }\r\n        }\r\n    });\r\n\r\n    /*>>image*/\r\n\r\n    /*>>zoom*/\r\n    var hasMozTransform,\r\n        getHasMozTransform = function () {\r\n            if (hasMozTransform === undefined) {\r\n                hasMozTransform = document.createElement('p').style.MozTransform !== undefined;\r\n            }\r\n            return hasMozTransform;\r\n        };\r\n\r\n    $.magnificPopup.registerModule('zoom', {\r\n\r\n        options: {\r\n            enabled: false,\r\n            easing: 'ease-in-out',\r\n            duration: 300,\r\n            opener: function (element) {\r\n                return element.is('img') ? element : element.find('img');\r\n            }\r\n        },\r\n\r\n        proto: {\r\n\r\n            initZoom: function () {\r\n                var zoomSt = mfp.st.zoom,\r\n                    ns = '.zoom',\r\n                    image;\r\n\r\n                if (!zoomSt.enabled || !mfp.supportsTransition) {\r\n                    return;\r\n                }\r\n\r\n                var duration = zoomSt.duration,\r\n                    getElToAnimate = function (image) {\r\n                        var newImg = image.clone().removeAttr('style').removeAttr('class').addClass('mfp-animated-image'),\r\n                            transition = 'all ' + (zoomSt.duration / 1000) + 's ' + zoomSt.easing,\r\n                            cssObj = {\r\n                                position: 'fixed',\r\n                                zIndex: 9999,\r\n                                left: 0,\r\n                                top: 0,\r\n                                '-webkit-backface-visibility': 'hidden'\r\n                            },\r\n                            t = 'transition';\r\n\r\n                        cssObj['-webkit-' + t] = cssObj['-moz-' + t] = cssObj['-o-' + t] = cssObj[t] = transition;\r\n\r\n                        newImg.css(cssObj);\r\n                        return newImg;\r\n                    },\r\n                    showMainContent = function () {\r\n                        mfp.content.css('visibility', 'visible');\r\n                    },\r\n                    openTimeout,\r\n                    animatedImg;\r\n\r\n                _mfpOn('BuildControls' + ns, function () {\r\n                    if (mfp._allowZoom()) {\r\n\r\n                        clearTimeout(openTimeout);\r\n                        mfp.content.css('visibility', 'hidden');\r\n\r\n                        // Basically, all code below does is clones existing image, puts in on top of the current one and animated it\r\n\r\n                        image = mfp._getItemToZoom();\r\n\r\n                        if (!image) {\r\n                            showMainContent();\r\n                            return;\r\n                        }\r\n\r\n                        animatedImg = getElToAnimate(image);\r\n\r\n                        animatedImg.css(mfp._getOffset());\r\n\r\n                        mfp.wrap.append(animatedImg);\r\n\r\n                        openTimeout = setTimeout(function () {\r\n                            animatedImg.css(mfp._getOffset(true));\r\n                            openTimeout = setTimeout(function () {\r\n\r\n                                showMainContent();\r\n\r\n                                setTimeout(function () {\r\n                                    animatedImg.remove();\r\n                                    image = animatedImg = null;\r\n                                    _mfpTrigger('ZoomAnimationEnded');\r\n                                }, 16); // avoid blink when switching images\r\n\r\n                            }, duration); // this timeout equals animation duration\r\n\r\n                        }, 16); // by adding this timeout we avoid short glitch at the beginning of animation\r\n\r\n\r\n                        // Lots of timeouts...\r\n                    }\r\n                });\r\n                _mfpOn(BEFORE_CLOSE_EVENT + ns, function () {\r\n                    if (mfp._allowZoom()) {\r\n\r\n                        clearTimeout(openTimeout);\r\n\r\n                        mfp.st.removalDelay = duration;\r\n\r\n                        if (!image) {\r\n                            image = mfp._getItemToZoom();\r\n                            if (!image) {\r\n                                return;\r\n                            }\r\n                            animatedImg = getElToAnimate(image);\r\n                        }\r\n\r\n                        animatedImg.css(mfp._getOffset(true));\r\n                        mfp.wrap.append(animatedImg);\r\n                        mfp.content.css('visibility', 'hidden');\r\n\r\n                        setTimeout(function () {\r\n                            animatedImg.css(mfp._getOffset());\r\n                        }, 16);\r\n                    }\r\n\r\n                });\r\n\r\n                _mfpOn(CLOSE_EVENT + ns, function () {\r\n                    if (mfp._allowZoom()) {\r\n                        showMainContent();\r\n                        if (animatedImg) {\r\n                            animatedImg.remove();\r\n                        }\r\n                        image = null;\r\n                    }\r\n                });\r\n            },\r\n\r\n            _allowZoom: function () {\r\n                return mfp.currItem.type === 'image';\r\n            },\r\n\r\n            _getItemToZoom: function () {\r\n                if (mfp.currItem.hasSize) {\r\n                    return mfp.currItem.img;\r\n                } else {\r\n                    return false;\r\n                }\r\n            },\r\n\r\n            // Get element postion relative to viewport\r\n            _getOffset: function (isLarge) {\r\n                var el;\r\n                if (isLarge) {\r\n                    el = mfp.currItem.img;\r\n                } else {\r\n                    el = mfp.st.zoom.opener(mfp.currItem.el || mfp.currItem);\r\n                }\r\n\r\n                var offset = el.offset();\r\n                var paddingTop = parseInt(el.css('padding-top'), 10);\r\n                var paddingBottom = parseInt(el.css('padding-bottom'), 10);\r\n                offset.top -= ($(window).scrollTop() - paddingTop);\r\n\r\n\r\n                /*\r\n\r\n                Animating left + top + width/height looks glitchy in Firefox, but perfect in Chrome. And vice-versa.\r\n\r\n                 */\r\n                var obj = {\r\n                    width: el.width(),\r\n                    // fix Zepto height+padding issue\r\n                    height: (_isJQ ? el.innerHeight() : el[0].offsetHeight) - paddingBottom - paddingTop\r\n                };\r\n\r\n                // I hate to do this, but there is no another option\r\n                if (getHasMozTransform()) {\r\n                    obj['-moz-transform'] = obj['transform'] = 'translate(' + offset.left + 'px,' + offset.top + 'px)';\r\n                } else {\r\n                    obj.left = offset.left;\r\n                    obj.top = offset.top;\r\n                }\r\n                return obj;\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n\r\n\r\n    /*>>zoom*/\r\n\r\n    /*>>iframe*/\r\n\r\n    var IFRAME_NS = 'iframe',\r\n        _emptyPage = '//about:blank',\r\n\r\n        _fixIframeBugs = function (isShowing) {\r\n            if (mfp.currTemplate[IFRAME_NS]) {\r\n                var el = mfp.currTemplate[IFRAME_NS].find('iframe');\r\n                if (el.length) {\r\n                    // reset src after the popup is closed to avoid \"video keeps playing after popup is closed\" bug\r\n                    if (!isShowing) {\r\n                        el[0].src = _emptyPage;\r\n                    }\r\n\r\n                    // IE8 black screen bug fix\r\n                    if (mfp.isIE8) {\r\n                        el.css('display', isShowing ? 'block' : 'none');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n    $.magnificPopup.registerModule(IFRAME_NS, {\r\n\r\n        options: {\r\n            markup: '<div class=\"mfp-iframe-scaler\">' +\r\n                '<div class=\"mfp-close\"></div>' +\r\n                '<iframe class=\"mfp-iframe\" src=\"//about:blank\" frameborder=\"0\" allowfullscreen></iframe>' +\r\n                '</div>',\r\n\r\n            srcAction: 'iframe_src',\r\n\r\n            // we don't care and support only one default type of URL by default\r\n            patterns: {\r\n                youtube: {\r\n                    index: 'youtube.com',\r\n                    id: 'v=',\r\n                    src: '//www.youtube.com/embed/%id%?autoplay=1'\r\n                },\r\n                vimeo: {\r\n                    index: 'vimeo.com/',\r\n                    id: '/',\r\n                    src: '//player.vimeo.com/video/%id%?autoplay=1'\r\n                },\r\n                gmaps: {\r\n                    index: '//maps.google.',\r\n                    src: '%id%&output=embed'\r\n                }\r\n            }\r\n        },\r\n\r\n        proto: {\r\n            initIframe: function () {\r\n                mfp.types.push(IFRAME_NS);\r\n\r\n                _mfpOn('BeforeChange', function (e, prevType, newType) {\r\n                    if (prevType !== newType) {\r\n                        if (prevType === IFRAME_NS) {\r\n                            _fixIframeBugs(); // iframe if removed\r\n                        } else if (newType === IFRAME_NS) {\r\n                            _fixIframeBugs(true); // iframe is showing\r\n                        }\r\n                    }// else {\r\n                    // iframe source is switched, don't do anything\r\n                    //}\r\n                });\r\n\r\n                _mfpOn(CLOSE_EVENT + '.' + IFRAME_NS, function () {\r\n                    _fixIframeBugs();\r\n                });\r\n            },\r\n\r\n            getIframe: function (item, template) {\r\n                var embedSrc = item.src;\r\n                var iframeSt = mfp.st.iframe;\r\n\r\n                $.each(iframeSt.patterns, function () {\r\n                    if (embedSrc.indexOf(this.index) > -1) {\r\n                        if (this.id) {\r\n                            if (typeof this.id === 'string') {\r\n                                embedSrc = embedSrc.substr(embedSrc.lastIndexOf(this.id) + this.id.length, embedSrc.length);\r\n                            } else {\r\n                                embedSrc = this.id.call(this, embedSrc);\r\n                            }\r\n                        }\r\n                        embedSrc = this.src.replace('%id%', embedSrc);\r\n                        return false; // break;\r\n                    }\r\n                });\r\n\r\n                var dataObj = {};\r\n                if (iframeSt.srcAction) {\r\n                    dataObj[iframeSt.srcAction] = embedSrc;\r\n                }\r\n                mfp._parseMarkup(template, dataObj, item);\r\n\r\n                mfp.updateStatus('ready');\r\n\r\n                return template;\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n\r\n    /*>>iframe*/\r\n\r\n    /*>>gallery*/\r\n    /**\r\n     * Get looped index depending on number of slides\r\n     */\r\n    var _getLoopedId = function (index) {\r\n        var numSlides = mfp.items.length;\r\n        if (index > numSlides - 1) {\r\n            return index - numSlides;\r\n        } else if (index < 0) {\r\n            return numSlides + index;\r\n        }\r\n        return index;\r\n    },\r\n        _replaceCurrTotal = function (text, curr, total) {\r\n            return text.replace(/%curr%/gi, curr + 1).replace(/%total%/gi, total);\r\n        };\r\n\r\n    $.magnificPopup.registerModule('gallery', {\r\n\r\n        options: {\r\n            enabled: false,\r\n            arrowMarkup: '<button title=\"%title%\" type=\"button\" class=\"mfp-arrow mfp-arrow-%dir%\"></button>',\r\n            preload: [0, 2],\r\n            navigateByImgClick: true,\r\n            arrows: true,\r\n\r\n            tPrev: 'Previous (Left arrow key)',\r\n            tNext: 'Next (Right arrow key)',\r\n            tCounter: '%curr% of %total%'\r\n        },\r\n\r\n        proto: {\r\n            initGallery: function () {\r\n\r\n                var gSt = mfp.st.gallery,\r\n                    ns = '.mfp-gallery';\r\n\r\n                mfp.direction = true; // true - next, false - prev\r\n\r\n                if (!gSt || !gSt.enabled) return false;\r\n\r\n                _wrapClasses += ' mfp-gallery';\r\n\r\n                _mfpOn(OPEN_EVENT + ns, function () {\r\n\r\n                    if (gSt.navigateByImgClick) {\r\n                        mfp.wrap.on('click' + ns, '.mfp-img', function () {\r\n                            if (mfp.items.length > 1) {\r\n                                mfp.next();\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    _document.on('keydown' + ns, function (e) {\r\n                        if (e.keyCode === 37) {\r\n                            mfp.prev();\r\n                        } else if (e.keyCode === 39) {\r\n                            mfp.next();\r\n                        }\r\n                    });\r\n                });\r\n\r\n                _mfpOn('UpdateStatus' + ns, function (e, data) {\r\n                    if (data.text) {\r\n                        data.text = _replaceCurrTotal(data.text, mfp.currItem.index, mfp.items.length);\r\n                    }\r\n                });\r\n\r\n                _mfpOn(MARKUP_PARSE_EVENT + ns, function (e, element, values, item) {\r\n                    var l = mfp.items.length;\r\n                    values.counter = l > 1 ? _replaceCurrTotal(gSt.tCounter, item.index, l) : '';\r\n                });\r\n\r\n                _mfpOn('BuildControls' + ns, function () {\r\n                    if (mfp.items.length > 1 && gSt.arrows && !mfp.arrowLeft) {\r\n                        var markup = gSt.arrowMarkup,\r\n                            arrowLeft = mfp.arrowLeft = $(markup.replace(/%title%/gi, gSt.tPrev).replace(/%dir%/gi, 'left')).addClass(PREVENT_CLOSE_CLASS),\r\n                            arrowRight = mfp.arrowRight = $(markup.replace(/%title%/gi, gSt.tNext).replace(/%dir%/gi, 'right')).addClass(PREVENT_CLOSE_CLASS);\r\n\r\n                        arrowLeft.click(function () {\r\n                            mfp.prev();\r\n                        });\r\n                        arrowRight.click(function () {\r\n                            mfp.next();\r\n                        });\r\n\r\n                        mfp.container.append(arrowLeft.add(arrowRight));\r\n                    }\r\n                });\r\n\r\n                _mfpOn(CHANGE_EVENT + ns, function () {\r\n                    if (mfp._preloadTimeout) clearTimeout(mfp._preloadTimeout);\r\n\r\n                    mfp._preloadTimeout = setTimeout(function () {\r\n                        mfp.preloadNearbyImages();\r\n                        mfp._preloadTimeout = null;\r\n                    }, 16);\r\n                });\r\n\r\n\r\n                _mfpOn(CLOSE_EVENT + ns, function () {\r\n                    _document.off(ns);\r\n                    mfp.wrap.off('click' + ns);\r\n                    mfp.arrowRight = mfp.arrowLeft = null;\r\n                });\r\n\r\n            },\r\n            next: function () {\r\n                mfp.direction = true;\r\n                mfp.index = _getLoopedId(mfp.index + 1);\r\n                mfp.updateItemHTML();\r\n            },\r\n            prev: function () {\r\n                mfp.direction = false;\r\n                mfp.index = _getLoopedId(mfp.index - 1);\r\n                mfp.updateItemHTML();\r\n            },\r\n            goTo: function (newIndex) {\r\n                mfp.direction = (newIndex >= mfp.index);\r\n                mfp.index = newIndex;\r\n                mfp.updateItemHTML();\r\n            },\r\n            preloadNearbyImages: function () {\r\n                var p = mfp.st.gallery.preload,\r\n                    preloadBefore = Math.min(p[0], mfp.items.length),\r\n                    preloadAfter = Math.min(p[1], mfp.items.length),\r\n                    i;\r\n\r\n                for (i = 1; i <= (mfp.direction ? preloadAfter : preloadBefore); i++) {\r\n                    mfp._preloadItem(mfp.index + i);\r\n                }\r\n                for (i = 1; i <= (mfp.direction ? preloadBefore : preloadAfter); i++) {\r\n                    mfp._preloadItem(mfp.index - i);\r\n                }\r\n            },\r\n            _preloadItem: function (index) {\r\n                index = _getLoopedId(index);\r\n\r\n                if (mfp.items[index].preloaded) {\r\n                    return;\r\n                }\r\n\r\n                var item = mfp.items[index];\r\n                if (!item.parsed) {\r\n                    item = mfp.parseEl(index);\r\n                }\r\n\r\n                _mfpTrigger('LazyLoad', item);\r\n\r\n                if (item.type === 'image') {\r\n                    item.img = $('<img class=\"mfp-img\" />').on('load.mfploader', function () {\r\n                        item.hasSize = true;\r\n                    }).on('error.mfploader', function () {\r\n                        item.hasSize = true;\r\n                        item.loadError = true;\r\n                        _mfpTrigger('LazyLoadError', item);\r\n                    }).attr('src', item.src);\r\n                }\r\n\r\n\r\n                item.preloaded = true;\r\n            }\r\n        }\r\n    });\r\n\r\n    /*>>gallery*/\r\n\r\n    /*>>retina*/\r\n\r\n    var RETINA_NS = 'retina';\r\n\r\n    $.magnificPopup.registerModule(RETINA_NS, {\r\n        options: {\r\n            replaceSrc: function (item) {\r\n                return item.src.replace(/\\.\\w+$/, function (m) { return '@2x' + m; });\r\n            },\r\n            ratio: 1 // Function or number.  Set to 1 to disable.\r\n        },\r\n        proto: {\r\n            initRetina: function () {\r\n                if (window.devicePixelRatio > 1) {\r\n\r\n                    var st = mfp.st.retina,\r\n                        ratio = st.ratio;\r\n\r\n                    ratio = !isNaN(ratio) ? ratio : ratio();\r\n\r\n                    if (ratio > 1) {\r\n                        _mfpOn('ImageHasSize' + '.' + RETINA_NS, function (e, item) {\r\n                            item.img.css({\r\n                                'max-width': item.img[0].naturalWidth / ratio,\r\n                                'width': '100%'\r\n                            });\r\n                        });\r\n                        _mfpOn('ElementParse' + '.' + RETINA_NS, function (e, item) {\r\n                            item.src = st.replaceSrc(item, ratio);\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    });\r\n\r\n    /*>>retina*/\r\n    _checkInstance();\r\n}));","\r\n"]}